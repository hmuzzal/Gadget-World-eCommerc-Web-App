@model GadgetWorld.Models.User

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_LayoutCustomer.cshtml";
}


<div>
    <section class="about py-lg-4 py-md-3 py-sm-3 py-3">
        <div class="container py-lg-5 py-md-5 py-sm-4 py-3">
            <h3 class="title text-center mb-lg-5 mb-md-4 mb-sm-4 mb-3">REGISTRATION</h3>
            <div class="about-products-w3layouts">
                <p>
                    <div>

                        @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
                        {
                            if (ViewBag.Message != null)
                            {
                                <div class="alert alert-success">
                                    <strong>@*Success!*@</strong>@ViewBag.Message

                                </div>
                            }
                            <div align="center" style="margin-top:60px">
                                @Html.ActionLink("LOGIN NOW", "Login","Home",
                                    new { id = 1}, //   Route args if needed; null if not.
                                    new {@style= "font-weight: bold; color:Green" }
                                    )
                            </div>

                        }

                        else
                        {

                            using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal text-left">
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    @*<div class="form-group">
                                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })

                                            </div>
                                        </div>*@

                                    @*<div class="form-group">
                                            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })

                                            </div>
                                        </div>*@


                                    <div class="form-group ">
                                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            @Html.ValidationMessage("EmailExists", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(model => model.RepeatPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.RepeatPassword, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.RepeatPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group" style="float: right;margin-right:180px">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Create" class="btn btn-default" />
                                        </div>
                                    </div>
                                </div>

                            }

                        }


                    </div>
                </p>
                <p class="my-lg-4 my-md-3 my-3">

                </p>
                <p>

                </p>
            </div>
        </div>
    </section>
</div>





<!-- //footer -->
<!-- LOGIN-->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Login</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="register-form">
                        <div class="register-form">
                            <form action="#" method="post">
                                <div class="fields-grid">

                                    @Html.ActionLink("Login", "Login", "Home", new { @class = "btn subscrib-btnn" })
                                    @Html.ActionLink("Sign Up", "Registration", "Home", new { @class = "btn subscrib-btnn" })
                                    @*<button type="submit" class="btn subscrib-btnn">Login</button>*@

                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

}



@section Scripts{

    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
